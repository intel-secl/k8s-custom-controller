/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1beta1

import (
	v1beta1 "github.com/intel-secl/k8s-custom-controller/crdSchema/api/hostattributes/v1beta1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// HostAttributesLister helps list HostAttributeses.
type HostAttributesLister interface {
	// List lists all HostAttributeses in the indexer.
	List(selector labels.Selector) (ret []*v1beta1.HostAttributes, err error)
	// HostAttributeses returns an object that can list and get HostAttributeses.
	HostAttributeses(namespace string) HostAttributesNamespaceLister
	HostAttributesListerExpansion
}

// hostAttributesLister implements the HostAttributesLister interface.
type hostAttributesLister struct {
	indexer cache.Indexer
}

// NewHostAttributesLister returns a new HostAttributesLister.
func NewHostAttributesLister(indexer cache.Indexer) HostAttributesLister {
	return &hostAttributesLister{indexer: indexer}
}

// List lists all HostAttributeses in the indexer.
func (s *hostAttributesLister) List(selector labels.Selector) (ret []*v1beta1.HostAttributes, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta1.HostAttributes))
	})
	return ret, err
}

// HostAttributeses returns an object that can list and get HostAttributeses.
func (s *hostAttributesLister) HostAttributeses(namespace string) HostAttributesNamespaceLister {
	return hostAttributesNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// HostAttributesNamespaceLister helps list and get HostAttributeses.
type HostAttributesNamespaceLister interface {
	// List lists all HostAttributeses in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1beta1.HostAttributes, err error)
	// Get retrieves the HostAttributes from the indexer for a given namespace and name.
	Get(name string) (*v1beta1.HostAttributes, error)
	HostAttributesNamespaceListerExpansion
}

// hostAttributesNamespaceLister implements the HostAttributesNamespaceLister
// interface.
type hostAttributesNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all HostAttributeses in the indexer for a given namespace.
func (s hostAttributesNamespaceLister) List(selector labels.Selector) (ret []*v1beta1.HostAttributes, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta1.HostAttributes))
	})
	return ret, err
}

// Get retrieves the HostAttributes from the indexer for a given namespace and name.
func (s hostAttributesNamespaceLister) Get(name string) (*v1beta1.HostAttributes, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1beta1.Resource("hostattributes"), name)
	}
	return obj.(*v1beta1.HostAttributes), nil
}
